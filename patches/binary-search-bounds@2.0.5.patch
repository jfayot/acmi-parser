diff --git a/search-bounds.d.ts b/search-bounds.d.ts
index 508535aead921136ba5e5aa7233bb6db2324d420..fe825e8a8b52b0ab7f1260c2387c26dd2df01be0 100644
--- a/search-bounds.d.ts
+++ b/search-bounds.d.ts
@@ -1,11 +1,41 @@
-declare module 'binary-search-bounds' {
-    interface BSearch {
-        gt<T>(array:T[], y:T, compare?:((a:T, b:T) => number | null | undefined), lo?:number, hi?:number);
-        ge<T>(array:T[], y:T, compare?:((a:T, b:T) => number | null | undefined), lo?:number, hi?:number);
-        lt<T>(array:T[], y:T, compare?:((a:T, b:T) => number | null | undefined), lo?:number, hi?:number);
-        le<T>(array:T[], y:T, compare?:((a:T, b:T) => number | null | undefined), lo?:number, hi?:number);
-        eq<T>(array:T[], y:T, compare?:((a:T, b:T) => number | null | undefined), lo?:number, hi?:number);
-    }
-    const bsearch:BSearch;
-    export = bsearch;
+declare module "binary-search-bounds" {
+  interface BSearch {
+    gt<T>(
+      array: T[],
+      y: T,
+      compare?: (a: T, b: T) => number | null | undefined,
+      lo?: number,
+      hi?: number
+    ): number;
+    ge<T>(
+      array: T[],
+      y: T,
+      compare?: (a: T, b: T) => number | null | undefined,
+      lo?: number,
+      hi?: number
+    ): number;
+    lt<T>(
+      array: T[],
+      y: T,
+      compare?: (a: T, b: T) => number | null | undefined,
+      lo?: number,
+      hi?: number
+    ): number;
+    le<T>(
+      array: T[],
+      y: T,
+      compare?: (a: T, b: T) => number | null | undefined,
+      lo?: number,
+      hi?: number
+    ): number;
+    eq<T>(
+      array: T[],
+      y: T,
+      compare?: (a: T, b: T) => number | null | undefined,
+      lo?: number,
+      hi?: number
+    ): number;
+  }
+  const bsearch: BSearch;
+  export = bsearch;
 }
